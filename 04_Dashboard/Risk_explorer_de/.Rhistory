swf<-stretch(swf, minv=0, maxv=254, smin=minmax(swf)[1,], smax=minmax(swf)[2,])
swf[is.na(swf)] <- 255
# Visualization
swf_rast <- raster(swf)
# Here the gap between the two parts of the Masaic is removed
swf_rast[,137] <- (swf_rast[,136]+swf_rast[,138])/2
swf <- gplot(swf_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#b7410e', mid = '#f0e130', high ='#4cbb17' , midpoint=128)+ggtitle("Small woody features")
ggplotly(swf, tooltip= "value")
swf <- rast(swf_rast)
#------------------------
# Export
sw <- file.path(export_vul,"V_10_SWF.tif")
terra::writeRaster(swf, sw, names = "V_SWF", overwrite = TRUE)
swf <- rast(swf_rast)
plot(swf)
#------------------------
# Export
sw <- file.path(export_vul,"V_10_SWF.tif")
terra::writeRaster(swf, sw, names = "V_SWF", overwrite = TRUE)
Schutzgeb <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Naturschutz\\Landschaftsschutzgebiete_Shapefile\\Landschaftsschutzgebiete\\Landschaftsschutzgebiete.shp") %>%
project(crs_all)
Schutzgeb$yes <- 20
# OENACE_I is not a vliad field name ?
Schutzgeb <- rasterize(Schutzgeb, Mask, "yes")*-1
Schutzgeb <- mask(Schutzgeb, Mask)
#Schutzgeb <- cover(Schutzgeb, Mask, values = NA) * -1
Schutzgeb <- stretch(Schutzgeb, minv=0, maxv=254, smin=minmax(Schutzgeb)[1,], smax=minmax(Schutzgeb)[2,])
plot(Schutzgeb)
Schutzgeb <- cover(Schutzgeb, Mask, values = NA) * -1
plot(Scjutzgeb)
plot(Schutzgeb)
Schutzgeb <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Naturschutz\\Landschaftsschutzgebiete_Shapefile\\Landschaftsschutzgebiete\\Landschaftsschutzgebiete.shp") %>%
project(crs_all)
Schutzgeb$yes <- 20
# OENACE_I is not a vliad field name ?
Schutzgeb <- rasterize(Schutzgeb, Mask, "yes")*-1
Schutzgeb <- cover(Schutzgeb, Mask, values = NA) * -1
Schutzgeb <- mask(Schutzgeb, Mask)
plot(Schutzgeb)
Schutzgeb <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Naturschutz\\Landschaftsschutzgebiete_Shapefile\\Landschaftsschutzgebiete\\Landschaftsschutzgebiete.shp") %>%
project(crs_all)
Schutzgeb$yes <- 20
# OENACE_I is not a vliad field name ?
Schutzgeb <- rasterize(Schutzgeb, Mask, "yes")*-1
Schutzgeb <- cover(Schutzgeb, Mask, values = NA)
Schutzgeb <- mask(Schutzgeb, Mask)
Schutzgeb <- stretch(Schutzgeb, minv=0, maxv=254, smin=minmax(Schutzgeb)[1,], smax=minmax(Schutzgeb)[2,])
Schutzgeb[Schutzgeb == 1] <- 0
Schutzgeb[is.na(Schutzgeb)] <- 255
#Naturschutz-----------------------------------
Naturschutz <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Naturschutz\\Naturschutzgebiete_Shapefile\\Naturschutzgebiete\\Naturschutzgebiete.shp") %>%
project(crs_all)
Naturschutz$yes <- 20
# OENACE_I is not a vliad field name ?
Naturschutz <- rasterize(Naturschutz, Mask, "yes")*-1
Naturschutz <- mask(Naturschutz, Mask)
#Naturschutz <- cover(Naturschutz, Mask, values = NA) * -1
Naturschutz <- stretch(Naturschutz, minv=0, maxv=254, smin=minmax(Naturschutz)[1,], smax=minmax(Naturschutz)[2,])
Schutzgeb <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Naturschutz\\Landschaftsschutzgebiete_Shapefile\\Landschaftsschutzgebiete\\Landschaftsschutzgebiete.shp") %>%
project(crs_all)
Schutzgeb$yes <- 20
# OENACE_I is not a vliad field name ?
Schutzgeb <- rasterize(Schutzgeb, Mask, "yes")*-1
Schutzgeb <- cover(Schutzgeb, Mask, values = NA)
Schutzgeb <- mask(Schutzgeb, Mask)
Schutzgeb <- stretch(Schutzgeb, minv=0, maxv=254, smin=minmax(Schutzgeb)[1,], smax=minmax(Schutzgeb)[2,])
Schutzgeb[Schutzgeb == 1] <- 0
Schutzgeb[is.na(Schutzgeb)] <- 255
#Naturschutz-----------------------------------
Naturschutz <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Naturschutz\\Naturschutzgebiete_Shapefile\\Naturschutzgebiete\\Naturschutzgebiete.shp") %>%
project(crs_all)
Naturschutz$yes <- 20
# OENACE_I is not a vliad field name ?
Naturschutz <- rasterize(Naturschutz, Mask, "yes")*-1
Naturschutz <- cover(Naturschutz, Mask, values = NA)
Naturschutz <- mask(Naturschutz, Mask)
Naturschutz <- stretch(Naturschutz, minv=0, maxv=254, smin=minmax(Naturschutz)[1,], smax=minmax(Naturschutz)[2,])
Naturschutz[is.na(Naturschutz)] <- 255
#Joint Naturschutzgebiete and Landschaftsschutzgebiete
join <- cover(Schutzgeb, Naturschutz, values = 254)
# Visualization
Schutz_rast <- raster(join)
prim <- gplot(Schutz_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Conservation area")
ggplotly(prim, tooltip= "value")
#-----------------
# Export
ls <- file.path(export_vul,"V_11_Conservation.tif")
terra::writeRaster(join, ls, names = "V_Conservation", overwrite = TRUE)
Wasser <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\alle_Wasserpunkte\\alle_Wasserpunkte.shp")
Wasser <- subset(Wasser, Wasser$SPRT_NAME %in% c ("Nutzwasserversorgung", "Trink-und Nutzwasserversorgung fÃ¼r betriebliche Versorgung")) %>%
project(crs_all)
#Wasser$yes <- 20
Wasser <- rasterize(Wasser, Mask, fun = length)
Wasser <- distance(Wasser)
Wasser <- mask(Wasser, Mask)
# The next line can only be executed when mask_2 has already been created in 02_UNCHAIN_dataanalysis.Rmd
Wasser <- terra::mask(Wasser, mask_2)
Wasser <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\alle_Wasserpunkte\\alle_Wasserpunkte.shp")
Wasser <- subset(Wasser, Wasser$SPRT_NAME %in% c ("Nutzwasserversorgung", "Trink-und Nutzwasserversorgung fÃ¼r betriebliche Versorgung")) %>%
project(crs_all)
#Wasser$yes <- 20
Wasser <- rasterize(Wasser, Mask, fun = length)
Wasser <- distance(Wasser)
Wasser <- mask(Wasser, Mask)
# The next line can only be executed when mask_2 has already been created in 02_UNCHAIN_dataanalysis.Rmd
Wasser <- stretch(Wasser, minv = 0, maxv = 254, smin = 0, smax = minmax(Wasser)[2,])
#Wasser[is.na(Wasser)] <- 255
# Visualization
Wasser_rast <- raster(Wasser)
prim <- gplot(Wasser_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Industrial water supply")
ggplotly(prim, tooltip= "value")
#-------------------------
# Export
watersupply <- file.path(export_vul,"V_12_WaterSupply.tif")
terra::writeRaster(Wasser, watersupply, names = "V_WaterSupply", overwrite = TRUE)
Wasser <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\alle_Wasserpunkte\\alle_Wasserpunkte.shp")
Wasser <- subset(Wasser, Wasser$SPRT_NAME %in% c ("Nutzwasserversorgung", "Trink-und Nutzwasserversorgung fÃ¼r betriebliche Versorgung")) %>%
project(crs_all)
#Wasser$yes <- 20
Wasser <- rasterize(Wasser, Mask, fun = length)
Wasser <- distance(Wasser)
Wasser <- mask(Wasser, Mask)
# The next line can only be executed when mask_2 has already been created in 02_UNCHAIN_dataanalysis.Rmd
Wasser <- stretch(Wasser, minv = 0, maxv = 254, smin = 0, smax = minmax(Wasser)[2,])
Wasser[is.na(Wasser)] <- 255
# Visualization
Wasser_rast <- raster(Wasser)
prim <- gplot(Wasser_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Industrial water supply")
ggplotly(prim, tooltip= "value")
#-------------------------
# Export
watersupply <- file.path(export_vul,"V_12_WaterSupply.tif")
terra::writeRaster(Wasser, watersupply, names = "V_WaterSupply", overwrite = TRUE)
knitr::opts_chunk$set(echo = TRUE)
vul_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\V\\"
vul_stack <- list.files(path = vul_path , pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
#vulnerability <- terra::mask(vul_stack, mask_2)
plot(vul_stack)
#vulnerability[is.na(vulnerability)] <- 255
writeRaster(vulnerability,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\Stacks\\Vulnerability_stack.tif", overwrite = TRUE)
#------------------------
#Grünland
BoKa$gruenl <- as.integer(BoKa$gruenl)
#------------------------
#Grünland
BoKa$gruenl <- as.integer(BoKa$gruenl)
Gruenl <- rasterize(BoKa, Mask, "gruenl")*-1
plot(Gruenl)
Gruenl <- terra::mask(Gruenl, Mask)
plot(Gruenl)
Gruenl
#Gruenl <- cover(Gruenl, Mask, values = NA) * -1
Gruenl[(Gruenl == 2147483648)] <- 0
plot(Gruenl)
Gruenl
Gruenl <- stretch(Gruenl, minv=0, maxv=254, smin=minmax(Gruenl)[1,], smax=minmax(Gruenl)[2,])
plot(Gruenl)
#Gruenl[(Gruenl == 1)] <- 0
Gruenl[is.na(Gruenl)] <- 255
plot(Gruenl)
gruen <- file.path(export_vul,"V_05_Gruenland.tif")
terra::writeRaster(Gruenl, gruen, names = "V_Gruenlandwert", overwrite = TRUE)
vul_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\V\\"
vul_stack <- list.files(path = vul_path , pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
#vulnerability <- terra::mask(vul_stack, mask_2)
plot(vul_stack)
#vulnerability[is.na(vulnerability)] <- 255
writeRaster(vul_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\Stacks\\Vulnerability_stack.tif", overwrite = TRUE)
PrimarySector <- vect("R:\\02_PROJECTS\\01_P_330001\\79_RESPECT\\03_Work\\WP2\\Data\\Raster_STATAT\\Wohnbevoelkerung_nach_Wirtschaftszugehoerigkeit_der_Arbeitsstaette.shp") %>%
project(crs_all)
PrimarySector_p <- rasterize(PrimarySector, Mask, "PrimarySec")
PrimarySector_p <- rasterize(PrimarySector, Mask)
# In this raster we have no NA gaps and therefore do not have to use the "cover" function
PrimarySector <- stretch(PrimarySector_p, minv = 0, maxv = 254, smin = minmax(PrimarySector_p)[1,], smax = minmax(PrimarySector_p)[2,])
PrimarySector <- vect("R:\\02_PROJECTS\\01_P_330001\\79_RESPECT\\03_Work\\WP2\\Data\\Raster_STATAT\\Wohnbevoelkerung_nach_Wirtschaftszugehoerigkeit_der_Arbeitsstaette.shp") %>%
project(crs_all)
PrimarySector_p <- rasterize(PrimarySector, Mask, "PrimarySec")
PrimarySector_p <- mask(PrimarySector, Mask)
PrimarySector_p <- mask(PrimarySector_p, Mask)
PrimarySector <- stretch(PrimarySector_p, minv = 0, maxv = 254, smin = minmax(PrimarySector_p)[1,], smax = minmax(PrimarySector_p)[2,])
PrimarySector[is.na(PrimarySector)] <- 255
knitr::opts_chunk$set(echo = TRUE, message = FALSE, error = FALSE, warning = FALSE)
# Processing
library(terra)
library(raster)
library(rasterVis)
# Plotting
library(rasterly)
library(plotly)
library(kableExtra)
library(knitr)
# Pipe operator
library(magrittr)
library(dplyr)
# Processing
library(terra)
library(raster)
library(rasterVis)
# Plotting
library(rasterly)
library(plotly)
library(kableExtra)
library(knitr)
# Pipe operator
library(magrittr)
library(dplyr)
crs_all<-"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs"
Agri_mask <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Drought_data_Salzburg\\Bodenfunktionsbewertung_Shapefile\\Bodenfunktionsbewertung\\Bodenfunktionsbewertung.shp") %>%
project(crs_all)
Agri_mask$yes <- 20
Mask <- rast("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\Mask_Salzburg_1km.tif") %>%
aggregate(fact = 10, fun = mean)
Mask <- rast("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\Mask_Salzburg_1km.tif") %>%
aggregate(fact = 10, fun = mean)
Agri_rast<-rasterize(Agri_mask, Mask, field ="yes", touches=TRUE)
Agri_rast<-rasterize(Agri_mask, Mask, field ="yes", touches=TRUE)
plot(Agri_rast)
Agri_rast <- cover(Agri_rast, Mask)
Agri_rast[is.na(Agri_rast)] <- 255
Agri_rast[(Agri_rast == -1)] <- 255
Agri_rast[(Agri_rast == 20)] <- -1
Agri_rast[(Agri_rast == 255)] <- NA
Mask <- Agri_rast
plot(Mask)
Mask_100m <- rast("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\Mask_Salzburg_1km.tif")
Agri_rast_100m <- rasterize(Agri_mask, Mask_100m, field = "yes", touches = TRUE)
plot(Agri_rast_100m)
Agri_rast_100m <- cover(Agri_rast_100m, Mask_100m)
Agri_rast_100m[is.na(Agri_rast_100m)] <- 255
Agri_rast_100m[(Agri_rast_100m == -1)] <- 255
Agri_rast_100m[(Agri_rast_100m == 20)] <- 1
Agri_rast_100m[(Agri_rast_100m == 255)] <- NA
plot(Agri_rast_100m)
Mask_100m <- Agri_rast_100m
PrimarySector <- vect("R:\\02_PROJECTS\\01_P_330001\\79_RESPECT\\03_Work\\WP2\\Data\\Raster_STATAT\\Wohnbevoelkerung_nach_Wirtschaftszugehoerigkeit_der_Arbeitsstaette.shp") %>%
project(crs_all)
PrimarySector_p <- rasterize(PrimarySector, Mask, "PrimarySec")
PrimarySector_p <- mask(PrimarySector_p, Mask)
plot(PrimarySector)
plot(PrimarySector_p)
PrimarySector <- stretch(PrimarySector_p, minv = 0, maxv = 254, smin = minmax(PrimarySector_p)[1,], smax = minmax(PrimarySector_p)[2,])
plot(PrimarySector)
PrimarySector[is.na(PrimarySector)] <- 255
PrimarySector_rast <- raster(PrimarySector)
prim <- gplot(PrimarySector_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Residents per industry: Primary")
ggplotly(prim, tooltip= "value")
plot(PrimarySector_p)
plot(Primary(Sector))
plot(PrimarySector)
Pop <- vect("R:\\02_PROJECTS\\01_P_330001\\79_RESPECT\\03_Work\\WP2\\Data\\Raster_STATAT\\Wohnbevoelkerung_nach_Alter.shp") %>%
project(crs_all)
Pop_rast <- rasterize(Pop, Mask, "POP")
plot(Pop_rast)
PrimaryShare <- (PrimarySector_p/Pop_rast) * 100
plot(PrimaryShare)
hist(PrimaryShare)
#PrimaryShare <- cover (PrimaryShare, Mask, values = NA)
# Implement here an algorithm for outlier detection
PrimaryShare <- stretch(PrimaryShare, minv = 0, maxv = 254, smin = 0, smax = 50)
PrimaryShare[is.na(PrimaryShare)] <- 255
plot(PrimaryShare)
prim_perc <- file.path(export_exposure,"E_01_PrimarySector_percentage.tif")
prim_perc <- file.path(export_exposure,"E_01_PrimarySector_percentage.tif")
export_exposure <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure"
export_vul <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability"
export_exposure <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure"
export_hazard <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard"
prim_perc <- file.path(export_exposure,"E_01_PrimarySector_percentage.tif")
terra::writeRaster(PrimaryShare, prim_perc, names = "E_PrimarySector_perc", overwrite = TRUE)
Feldst <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Feldstuecke\\Feldstuecke_BL_Salzburg.shp") %>%
project(crs_all)
Feldst <- rasterize(Feldst, Mask, cover = TRUE)
Feldst <- mask(Feldst, Mask)
plot(Feldst)
Feldst <- stretch(Feldst, minv = 0, maxv = 254, smin = minmax(Feldst)[1,], smax = minmax(Feldst)[2,])
plot(Feldst)
#Feldst <- cover (Feldst, Mask, values = NA)
Feldst[is.na(Feldst)] <- 255
plot(Feldst)
agri_land <- file.path(export_exposure,"E_02_Agricultural_land.tif")
terra::writeRaster(Feldst, agri_land, names = "E_Agricultural_land", overwrite = TRUE)
knitr::opts_chunk$set(echo = TRUE)
exp_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\"
exp_stack <- list.files(path = exp_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
exposure <- terra::mask(exp_stack, mask_2)
exp_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\"
exp_stack <- list.files(path = exp_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
#exposure <- terra::mask(exp_stack, mask_2)
#plot(exposure)
#exposure[is.na(exposure)] <- 255
writeRaster(exposure,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\Stacks\\Exposure_stack.tif", overwrite = TRUE)
writeRaster(exp_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\Stacks\\Exposure_stack.tif", overwrite = TRUE)
haz_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\"
haz_stack <- list.files(path = haz_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
#hazard <- terra::mask(haz_stack, mask_2)
#plot(hazard)
#hazard[is.na(hazard)] <- 255
writeRaster(haz_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\Stacks\\Hazard_stack.tif", overwrite = TRUE)
#exposure <- terra::mask(exp_stack, mask_2)
#plot(exposure)
#exposure[is.na(exposure)] <- 255
plot(exp_stack)
#hazard <- terra::mask(haz_stack, mask_2)
plot(haz_stack)
path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\01_ZAMG_SPARTACUS_Monthly\\Output\\Data\\"
hazard_prep <- function(file, output, names){
x <- rast(paste0(path,file)) %>%
terra::project(y=crs_all) %>%
resample(Mask, method="bilinear") %>%
mask(Mask)
x <- stretch(x, minv = 0, maxv = 254, smin = minmax(x)[1,], smax = minmax(x)[2,])
x[is.na(x)] <- 255
f <- file.path(export_hazard,output)
writeRaster(x, f, names = names, overwrite = TRUE)
}
SPI3_Sep_2021_2050_RCP45 <- hazard_prep("SPI_delta_2021_2050_RCP45.tif", "H_01_SPI3_Sep_2021_2050_RCP45.tif", "H_SPI3_Sep_2021_2050_RCP45")
SPI3_Sep_2071_2100_RCP45 <- hazard_prep("SPI_delta_2071_2100_RCP45.tif", "H_02_SPI3_Sep_2071_2100_RCP45.tif", "H_SPI3_Sep_2071_2100_RCP45")
SPI3_Sep_2021_2050_RCP85 <- hazard_prep("SPI_delta_2021_2050_RCP85.tif", "H_03_SPI3_Sep_2021_2050_RCP85.tif", "H_SPI3_Sep_2021_2050_RCP85")
SPI3_Sep_2071_2100_RCP85 <- hazard_prep("SPI_delta_2071_2100_RCP85.tif", "H_04_SPI3_Sep_2071_2100_RCP85.tif", "H_SPI3_Sep_2071_2100_RCP85")
# Visualization
hazard_viz <- function (output_haz_prep, title){
y <- raster(output_haz_prep) %>%
gplot() +
geom_tile(aes(fill=value), alpha=0.8)+
scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high = '#b7410e', midpoint=128) +
coord_equal()+
ggtitle(title)
ggplotly(y, tooltip= "value")
}
SPI_2021_2050_RCP45_rast <- hazard_viz(SPI3_Sep_2021_2050_RCP45, "SPI delta 2021-2050 RCP 4.5")
SPI_2071_2100_RCP45_rast <- hazard_viz(SPI3_Sep_2071_2100_RCP45, "SPI delta 2071-2100 RCP 4.5")
SPI_2021_2050_RCP85_rast <- hazard_viz(SPI3_Sep_2021_2050_RCP85, "SPI delta 2021-2050 RCP 8.5")
SPI_2071_2100_RCP85_rast <- hazard_viz(SPI3_Sep_2071_2100_RCP85, "SPI delta 2071-2100 RCP 8.5")
haz_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\"
haz_stack <- list.files(path = haz_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
#hazard <- terra::mask(haz_stack, mask_2)
plot(haz_stack)
#hazard[is.na(hazard)] <- 255
writeRaster(haz_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\Stacks\\Hazard_stack.tif", overwrite = TRUE)
Feldst_rast <- raster(Feldst)
prim <- gplot(Feldst_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Share of agriculutral land per cell")
ggplotly(prim, tooltip= "value")
PrimaryShare_rast <- raster(PrimaryShare)
prim <- gplot(PrimaryShare_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Residents per industry: Primary")
ggplotly(prim, tooltip= "value")
Gastro_rast <- raster(Gastro)
Gastro_v <- vect("R:\\02_PROJECTS\\01_P_330001\\79_RESPECT\\03_Work\\WP2\\Data\\Raster_STATAT\\Arbeitsstaetten_nach_Wirtschaftsabschnitt.shp") %>%
project(crs_all)
Gastro <- rasterize(Gastro_v, Mask, "OENACE_I") * -1
# Variables metadata stored in "R:\02_PROJECTS\01_P_330001\79_RESPECT\03_Work\WP2\Data\Raster_STATAT\20180412_zgis_1kmdatenMetadaten.xslx"
# OENACE_I is "Beherbergung und Gastronomie"
#BeherbergungGastro_rast<-terra::rasterize(BeherbergungGastro_reproj,Mask,"OENACE_I")
Gastro <- mask(Gastro, Mask)
Gastro <- stretch(Gastro, minv=0, maxv=254, smin=minmax(Gastro)[1,], smax=minmax(Gastro)[2,])
Gastro[is.na(Gastro)] <- 255
# Visualization
Gastro_rast <- raster(Gastro)
prim <- gplot(Gastro_rast) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Accomodation and gastronomy")
ggplotly(prim, tooltip= "value")
# Load libraries
library(terra)
library(ENMTools) # for correlation plot
library(raster)
library(knitr)
library(kableExtra)
library(corrplot)
library(ggplot2)
library(ggdist)
library(rasterVis)
library(plotly)
library(geodiv) #for kurtosis
library(dplyr)
library(magrittr)
crs_all<-"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs"
Agri_mask <- vect("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Drought_data_Salzburg\\Bodenfunktionsbewertung_Shapefile\\Bodenfunktionsbewertung\\Bodenfunktionsbewertung.shp") %>%
project(crs_all)
Agri_mask$yes <- 20
Mask <- rast("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\Mask_Salzburg_1km.tif") %>%
aggregate(fact = 10, fun = mean)
Agri_rast<-rasterize(Agri_mask, Mask, field ="yes", touches=TRUE)
plot(Agri_rast)
Agri_rast <- cover(Agri_rast, Mask)
Agri_rast[is.na(Agri_rast)] <- 255
Agri_rast[(Agri_rast == -1)] <- 255
# Visualization
Agri_rast_p <- raster(Agri_rast)
prim <- gplot(Agri_rast_p) + geom_tile(aes(fill=value), alpha=0.8) + coord_equal()+ scale_fill_gradient2(low = '#4cbb17', mid = '#f0e130', high ='#b7410e' , midpoint=128)+ggtitle("Agricultural area")
ggplotly(prim, tooltip= "value")
#--------------
# Export
export <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\"
agri <- file.path(export,"Agri.tif")
terra::writeRaster(Agri_rast, agri, names = "Agri_mask", overwrite = TRUE)
vul_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\V\\"
vul_stack <- list.files(path = vul_path , pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
#mask_0 <- rast("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\Mask_SBG_only_1km.tif")
#agri_mask <- rast("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\Mask_Salzburg_1km\\Agri.tif")
# We want mask to have the same projection and extent as vul_stack and forest_mask (they already match)
mask_1 <- project(Mask, vul_stack) %>%
crop(vul_stack)
# We remove everything from forest_mask which is not also in mask and then add 255 to NA area, so that the whole picture has either 255 or 0 as a value
# We mask everything from the forest_mask which is not contained in the mask (Germany and other areas outside of Salzburg). Outside Salzburg is NA, inside is 0 and forested areas are 255. We want also inside Salzburg to be NA.
mask_2 <- terra::mask(Agri_rast, mask_1)
mask_2[mask_2==255] <- NA
vul_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\V\\"
vul_stack <- list.files(path = vul_path , pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
vulnerability <- terra::mask(vul_stack, mask_2)
plot(vul_stack)
vulnerability[is.na(vulnerability)] <- 255
writeRaster(vul_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\Stacks\\Vulnerability_stack.tif", overwrite = TRUE)
exp_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\"
exp_stack <- list.files(path = exp_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
exposure <- terra::mask(exp_stack, mask_2)
#plot(exposure)
exposure[is.na(exposure)] <- 255
plot(exp_stack)
writeRaster(exp_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\Stacks\\Exposure_stack.tif", overwrite = TRUE)
haz_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\"
haz_stack <- list.files(path = haz_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
hazard <- terra::mask(haz_stack, mask_2)
plot(haz_stack)
hazard[is.na(hazard)] <- 255
writeRaster(haz_stack,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\Stacks\\Hazard_stack.tif", overwrite = TRUE)
# Plot rasters interactive
# Style the plot
austria<-gplot(subset_agriculture) + facet_wrap(~variable) +
geom_tile(aes(fill=value)) + coord_equal()
vul_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\V\\"
vul_stack <- list.files(path = vul_path , pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
vulnerability <- terra::mask(vul_stack, mask_2)
plot(vul_stack)
vulnerability[is.na(vulnerability)] <- 255
writeRaster(vulnerability,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\01_Vulnerability\\Stacks\\Vulnerability_stack.tif", overwrite = TRUE)
exp_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\"
exp_stack <- list.files(path = exp_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
exposure <- terra::mask(exp_stack, mask_2)
#plot(exposure)
exposure[is.na(exposure)] <- 255
plot(exp_stack)
writeRaster(exposure,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\Stacks\\Exposure_stack.tif", overwrite = TRUE)
haz_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\"
haz_stack <- list.files(path = haz_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
hazard <- terra::mask(haz_stack, mask_2)
plot(haz_stack)
hazard[is.na(hazard)] <- 255
writeRaster(hazard,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\03_Hazard\\Stacks\\Hazard_stack.tif", overwrite = TRUE)
# Plot rasters interactive
# Style the plot
austria<-gplot(vulnerability) + facet_wrap(~variable) +
geom_tile(aes(fill=value)) + coord_equal()
#Plot the plot
ggplotly(austria)
plot(exposure)
exp_path <- "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\"
exp_stack <- list.files(path = exp_path, pattern='.tif', all.files=TRUE, full.names = TRUE) %>%
rast()
exposure <- terra::mask(exp_stack, mask_2)
#plot(exposure)
exposure[is.na(exposure)] <- 255
plot(exposure)
writeRaster(exposure,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\Stacks\\Exposure_stack.tif", overwrite = TRUE)
writeRaster(exposure,"R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\02_Data\\00_Final_data\\02_Exposure\\Stacks\\Exposure_stack.tif", overwrite = TRUE)
plot(hazard)
library(shiny); runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_v2/Risk_explorer_v2.R')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_v2')
risk_data = sf::st_read("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\04_Geonization\\results\\RiskExport\\Drought.v3.shp")
risk = sf::st_transform(risk_data, 4326)
risk <- smooth(risk, "densify")
risk <- smoothr::smooth(risk, "densify")
plot(risk)
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_v2')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_v2')
library(data.table)
data_sources <- read.csv(file = "R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\03_Indikatoren\\Final_list_de.csv", header = TRUE, sep = ";")
xtable::xtable(data_sources)
library(data.table)
data_sources <- read.csv(file = "R:\\02_PROJECTS\\01_P_330001\\120_TheMetrix\\02_Work\\Results\\H3_calculator\\data\\locations.csv", header = TRUE, sep = ";")
xtable::xtable(data_sources)
library(data.table)
data_sources <- read.csv(file = "R:\\02_PROJECTS\\01_P_330001\\120_TheMetrix\\02_Work\\Results\\H3_Mapping\\data\\Points2Hexagons_ID_L7..csv", header = TRUE, sep = ";")
xtable::xtable(data_sources)
library(data.table)
data_sources <- read.csv(file = "R:\\02_PROJECTS\\01_P_330001\\120_TheMetrix\\02_Work\\Results\\H3_Mapping\\data\\Points2Hexagons_ID_L7..csv", header = TRUE, sep = ";")
xtable::xtable(data_sources)
library(data.table)
data_sources <- read.csv(file = "R:\\02_PROJECTS\\01_P_330001\\120_TheMetrix\\02_Work\\Results\\H3_Mapping\\data\\Points2Hexagons_ID_L7.csv", header = TRUE, sep = ";")
xtable::xtable(data_sources)
shiny::runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
shiny::runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
shiny::runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
runApp('R:/02_PROJECTS/01_P_330001/127_UNCHAIN/03__Work/WP4/03_Casestudy/R_Scripts/Risk_explorer_de')
setwd("R:\\02_PROJECTS\\01_P_330001\\127_UNCHAIN\\03__Work\\WP4\\03_Casestudy\\R_Scripts\\Risk_explorer_de")
